name: build

on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19
      - name: Get dependencies
        run: |
          sudo apt-get update && sudo apt-get install gcc libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev libx11-dev xorg-dev
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.51.2
          go install golang.org/x/tools/cmd/goimports@latest
          go install github.com/fzipp/gocyclo/cmd/gocyclo@latest
          go install golang.org/x/lint/golint@latest
          go install honnef.co/go/tools/cmd/staticcheck@v0.2.1

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Lint
        run: make lint

  test:
    runs-on: ubuntu-latest
    environment: release
    needs: lint
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get dependencies
        run: |
          sudo apt-get update && sudo apt-get install gcc libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev libx11-dev xorg-dev
      - run: git fetch --force --tags
      - uses: actions/setup-go@v3
        with:
          go-version: ^1.19
          cache: true
      - name: Test
        run: make test

  snapshot:
    runs-on: ubuntu-latest
    environment: release
    needs: test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get dependencies
        run: |
          sudo apt-get update && sudo apt-get install gcc libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev libx11-dev xorg-dev gcc-multilib gcc-mingw-w64
      - run: git fetch --force --tags
      - uses: actions/setup-go@v3
        with:
          go-version: ^1.19
          cache: true
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --nightly --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
